sub $0, $0, $0	;n1
sub $1, $1, $1	;n2
sub $2, $2, $2	;n
sub $3, $3, $3	;resposta
sub $4, $4, $4	;registrador para buscar informacoes do vetor
sub $5, $5, $5	;registrador para buscar informacoes do vetor
sub $6, $6, $6	;registrador para salvar fib[i] no loop
sub $7, $7, $7	;controlador do loop

lw $0, 0($0)	;carrega n1 da memoria
lw $1, 1($1)	;carrega n2 da memoria


add $2, $2, $0	;n = n1


IF:	;if (n < n2)
slt $3, $1, $2	;verifica se n < n2
beq $4, $3, TROCA	;caso seja, efetua a troca de valores de n


sub $3, $3, $3

addi $6, $3, 0	;fib[0] = 0
sw $6, 3($3)	;salva a celula do vetor na memoria

addi $6, $3, 1	;fib[1] = 1
sw $6, 4($3)	;salva a celula do vetor na memoria


addi $3, $3, 5	;marca referencia do vetor na posicao 2 do vetor
addi $7, $7, 2	;i = 2

LOOP:	;for (i = 2; i < n; i++)
lw $4, -1($3)	;carrega fib[i - 1] da memoria
lw $5, -2($3)	;carrega fib[i - 2] da memoria

add $6, $4, $5	;fib[i] = fib[i - 1] + fib[i - 2]
sw $6, 0($3)	;salva no vetor

addi $3, $3, 1	;incrementa a referencia do vetor
addi $7, $7, 1	;incrementa o indice i (i++)

beq $7, $1, RESULT	;condicao de parada (i == n)

j LOOP	;prossegue com o loop


TROCA:	;n = n2
sub $2, $2, $2
add $2, $2, $1
j IF


RESULT:	;calcula a saida do programa
lw $4, 3($0)	;carrega fib[n1] da memoria
lw $5, 3($1)	;carrega fib[n2] da memoria

sub $3, $5, $4	;resposta = fib[n1] - fib[n2]

sub $2, $2, $2
sw $3, 2($2)	;salva o resultado na memoria